# Task 3: Image Captioning (Feature extraction + simple caption generation)

import tensorflow as tf
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.applications.resnet50 import preprocess_input, decode_predictions
from tensorflow.keras.preprocessing import image
import numpy as np

# Load pre-trained CNN (ResNet50)
model = ResNet50(weights="imagenet")

def generate_caption(img_path):
    # Preprocess image
    img = image.load_img(img_path, target_size=(224, 224))
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)

    # Extract features & predict
    preds = model.predict(x)
    decoded = decode_predictions(preds, top=3)[0]

    # Naive captioning: describe top predicted object
    obj = decoded[0][1]
    caption = f"A {obj} is present in the image."
    return caption

if __name__ == "__main__":
    test_image = "outputs/sample_image.jpg"  # replace with your own image
    caption = generate_caption(test_image)
    print("Generated Caption:", caption)
